mysql 主从配置:

master:192.168.1.10
slave:192.168.1.11

yum -y install mysql mysql-server
mysql_secure_installation 
master:

(1)在Master MySQL上创建一个用户‘repl’，并允许其他Slave服务器可以通过远程访问Master，通过该用户读取二进制日志，实现数据同步
	create user repl;
	GRANT REPLICATION SLAVE ON *.* TO 'repl'@'192.168.1.%' IDENTIFIED BY 'mysql';
	flush privileges;
	
	//repl用户必须具有REPLICATION SLAVE权限，除此之外没有必要添加不必要的权限，密码为mysql。说明一下192.168.1.%，这个配置是指明repl用户所在服务器，这里%是通配符，表示192.168.0.0-192.168.0.255的Server都可以以repl用户登陆主服务器。当然你也可以指定固定Ip。

(2) vi /etc/my.cnf
[mysqld] +
#add by lj
server-id=1     
log-bin=master-bin
log-bin-index=master-bin.index

binlog-do-db = dbname (要同步的数据库名) 
binlog-ignore-db=mysql

replicate-do-table=lj.h1 (要同步的表名) 
replicate-ignore-table=lj.h2

只有replicate-ignore-table生效,没有配置replicate-ignore-table时,同步所有表(同理binlog-do-db)
配置项可以查看show slave status;结果
SHOW MASTER STATUS; 查看master状态，记录master_log_file

#若涉及及同步函数或者存储过程需要配置，否则主备会产生异常不能同步
log_bin_trust_function_creators=TRUE

salve：
vi /etc/my.cnf
[mysqld] +
server-id=2
relay-log-index=slave-relay-bin.index
relay-log=slave-relay-bin 

连接master
mysql>change master to master_host='192.168.1.10',master_port=3306,master_user='repl',master_password='mysql', master_log_file='master-bin.000001',master_log_pos=0;
mysql>start slave;
mysql>show slave status；
检查输出结果是否与配置相符，并且Slave_IO_Running与Slave_SQL_Running两项必须为YES

master建库建表测试

mysql读写分离：
mysql-proxy:
yum install epel-release -y
yum -y install mysql-proxy lua

mysql-proxy --proxy-read-only-backend-addresses=192.168.1.11:3306 --proxy-backend-addresses=192.168.1.10:3306 --proxy-lua-script=rw-splitting.lua --daemon --max-open-files=1500

客户端数,开始读写分离：
min_idle_connections = 4,
max_idle_connections = 8,

amoeba:
http://sourceforge.net/projects/amoeba/files/
wget http://nchc.dl.sourceforge.net/project/amoeba/Amoeba%20for%20mysql/3.x/amoeba-mysql-3.0.5-RC-distribution.zip




